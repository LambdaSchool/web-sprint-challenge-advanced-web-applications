{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anunaya\\\\Desktop\\\\LAMBDA\\\\webpt16\\\\React\\\\AdvReact\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\BubblePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { AxiosCall } from \"./AxiosCall\";\nimport Bubbles from \"./Bubbles\";\nimport ColorList from \"./ColorList\";\nimport AddColor from \"./AddColor\";\n\nconst BubblePage = () => {\n  const [colorList, setColorList] = useState([]); // fetch your colors data from the server when the component mounts\n  // set that data to the colorList state property\n\n  /*  export class ServerData extends Component {\r\n    state = {\r\n      info: [],\r\n     \r\n    };\r\n  */\n\n  const getData = () => {\n    AxiosCall().get(\"/colors\").then(res => {\n      console.log(res.data);\n      setColorList({\n        info: res.data\n      });\n    }).catch(err => console.log({\n      err\n    }));\n  };\n\n  useEffect(() => {\n    const generateBubbleData = colors.map((_, i) => ({\n      value: Math.floor(Math.random() * (colors.length * 2)) + 1,\n      key: `${i + 1}`\n    }));\n    setBubbleData(generateBubbleData);\n  }, [colors]);\n  return React.createElement(React.Fragment, null, React.createElement(ColorList, {\n    colors: colorList,\n    updateColors: setColorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Bubbles, {\n    colors: colorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default BubblePage;","map":{"version":3,"sources":["C:/Users/Anunaya/Desktop/LAMBDA/webpt16/React/AdvReact/web-sprint-challenge-advanced-web-applications/client/src/components/BubblePage.js"],"names":["React","useState","useEffect","AxiosCall","Bubbles","ColorList","AddColor","BubblePage","colorList","setColorList","getData","get","then","res","console","log","data","info","catch","err","generateBubbleData","colors","map","_","i","value","Math","floor","random","length","key","setBubbleData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C,CADuB,CAEvB;AACA;;AAEA;;;;;;;AAMA,QAAMS,OAAO,GAAG,MAAM;AACpBP,IAAAA,SAAS,GACNQ,GADH,CACO,SADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAP,MAAAA,YAAY,CAAC;AACXQ,QAAAA,IAAI,EAAEJ,GAAG,CAACG;AADC,OAAD,CAAZ;AAGD,KAPH,EASGE,KATH,CASUC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAY;AAAEI,MAAAA;AAAF,KAAZ,CATlB;AAUD,GAXD;;AAaAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,MAAW;AAC/CC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,MAAM,CAACQ,MAAP,GAAgB,CAAjC,CAAX,IAAkD,CADV;AAE/CC,MAAAA,GAAG,EAAG,GAAEN,CAAC,GAAG,CAAE;AAFiC,KAAX,CAAX,CAA3B;AAIAO,IAAAA,aAAa,CAACX,kBAAD,CAAb;AACD,GANQ,EAMN,CAACC,MAAD,CANM,CAAT;AAQA,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEb,SAAnB;AAA8B,IAAA,YAAY,EAAEC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAtCD;;AAwCA,eAAeD,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { AxiosCall } from \"./AxiosCall\";\r\n\r\nimport Bubbles from \"./Bubbles\";\r\nimport ColorList from \"./ColorList\";\r\nimport AddColor from \"./AddColor\";\r\nconst BubblePage = () => {\r\n  const [colorList, setColorList] = useState([]);\r\n  // fetch your colors data from the server when the component mounts\r\n  // set that data to the colorList state property\r\n\r\n  /*  export class ServerData extends Component {\r\n    state = {\r\n      info: [],\r\n     \r\n    };\r\n */\r\n  const getData = () => {\r\n    AxiosCall()\r\n      .get(\"/colors\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setColorList({\r\n          info: res.data,\r\n        });\r\n      })\r\n\r\n      .catch((err) => console.log({ err }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const generateBubbleData = colors.map((_, i) => ({\r\n      value: Math.floor(Math.random() * (colors.length * 2)) + 1,\r\n      key: `${i + 1}`,\r\n    }));\r\n    setBubbleData(generateBubbleData);\r\n  }, [colors]);\r\n\r\n  return (\r\n    <>\r\n      <ColorList colors={colorList} updateColors={setColorList} />\r\n      <Bubbles colors={colorList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BubblePage;\r\n"]},"metadata":{},"sourceType":"module"}